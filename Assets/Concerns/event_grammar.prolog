:- op(1200, xfx, >-->).

:- public ('>-->')/ 2.

%% next_events(Nonterminal, History, Events)
%  Events is a list of possible events that can come after History
%  for Nonterminal
next_events(Nonterminal, History, Events) :-
   append(History, [E], ExtendedHistory),
   all(E,
       admissible_history(ExtendedHistory, [], Nonterminal),
       Events).

%% admissible_history(+List, -Tail, +GrammarSymbols)
%  Either List is a prefix of a string generated by GrammarSymbols
%  or List can be partitioned into Start + Tail, such that Start is
%  a string generated by GrammarSymbols.
admissible_history([], [], _) :- !.
admissible_history(L, L, []) :- !.
admissible_history([E | ET], R, [E | GR]) :-
   admissible_history(ET, R, GR).
admissible_history(H, R, (A, B)) :-
   admissible_history(H, I, A),
   admissible_history(I, R, B).
admissible_history(H, R, (A ; B)) :-
   admissible_history(H, R, A)
   ;
   admissible_history(H, R, B).
admissible_history(H, H, { Proposition }) :-
   Proposition.
admissible_history(H, R, Nonterminal) :-
   (Nonterminal >--> Expansion),
   admissible_history(H, R, Expansion). 

